# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: option-price-faas


provider:
  name: aws
  runtime: nodejs8.10


package:
  exclude:
    - functions/**
    - node_modules
    - tests/**
    - tests
    - .gitignore
    - package-lock.json
    - package.json
    - README.md
    - serverless.yml
    - .travis.yml
  include:
   - functions/target/x86_64-unknown-linux-musl/release/calibrator
   - functions/target/x86_64-unknown-linux-musl/release/output_constraints
   - functions/target/x86_64-unknown-linux-musl/release/pricer
   - lambda/**
   - node_modules/cubic-spline/**
functions:
  calculator:
    handler: lambda/pricer.calculator
    events:
      - http:
          path: calculator/{optionType}/{sensitivity}
          method: post
          cors: true
          request:
            parameters:
              paths:
                optionType: true
                sensitivity: true
  density:
    handler: lambda/pricer.density
    events:
      - http:
          path: density/{densityType}
          method: post
          cors: true
          request:
            parameters:
              paths:
                densityType: true
  defaultParameters:
    handler: lambda/pricer.constraints
    events:
      - http:
          path: parameters/parameter_ranges
          method: get
          cors: true

  getExpirationDates:
    handler: lambda/marketData.getExpirationDates
    events:
      - http:
          path: options/{ticker}/maturities
          method: get
          cors: true
          request:
            parameters:
              paths:
                ticker: true

  getOptionPrices:
    handler: lambda/marketData.getOptionPrices
    events:
      - http:
          path: options/{ticker}/prices/{asOfDate}
          method: get
          cors: true
          request:
            parameters:
              paths:
                ticker: true
                asOfDate: true
              querystrings:
                minOpenInterest: false
                minRelativeBidAskSpread: false
  getFortune500:
    handler: lambda/marketData.getFortune500
    events:
      - http:
          path: options/tickers
          method: get
          cors: true
  calibrator:
    memorySize: 3008 # optional, in MB, default is 1024
    timeout: 30 # optional, in seconds, default is 6
    handler: lambda/calibrator.calibrator
    events:
      - http:
          path: calibrator/{calibration}
          method: post
          cors: true
          request:
            parameters:
              paths:
                calibration: true
          

      

