service: option-price-faas

provider:
  name: aws
  runtime: provided
  stage: prd
  usagePlan: # Optional usage plan configuration
    quota:
      limit: 300
      offset: 0
      period: DAY
    throttle:
      burstLimit: 10
      rateLimit: 5
  #UsagePlanKey:
  #    Type: "AWS::ApiGateway::UsagePlanKey"
  #    Properties:
  #      KeyId:
  #        Ref: ApiGatewayApiKey1
  #      KeyType: API_KEY
  #      UsagePlanId:
  #        Ref: UsagePlan
plugins:
  - serverless-domain-manager

custom:
  customDomain:
    domainName: api.finside.org
    basePath: realoptions
    stage: ${self:provider.stage}
    createRoute53Record: true

package:
  individually: true #needed to name each binary "bootstrap"
functions:
  calculator:
    handler: doesntmatter #because runtime is provided
    package:
      artifact: pricer.zip
    events:
      - http:
          path: v1/{model}/calculator/{optionType}/{sensitivity}
          method: post
          cors: true
          private: true
          request:
            parameters:
              paths:
                optionType: true
                sensitivity: true
                model: true
              querystrings:
                includeImpliedVolatility: false
  density:
    handler: doesntmatter #because runtime is provided
    package:
      artifact: density.zip
    events:
      - http:
          path: v1/{model}/density
          method: post
          cors: true
          private: true
          request:
            parameters:
              paths:
                model: true

  riskmetric:
    handler: doesntmatter #because runtime is provided
    package:
      artifact: riskmetric.zip
    events:
      - http:
          path: v1/{model}/riskmetric
          method: post
          cors: true
          private: true
          request:
            parameters:
              paths:
                model: true

  constraints:
    handler: doesntmatter #because runtime is provided
    package:
      artifact: constraints.zip
    events:
      - http:
          path: v1/{model}/parameters/parameter_ranges
          method: get
          cors: true
          private: true
          request:
            parameters:
              paths:
                model: true