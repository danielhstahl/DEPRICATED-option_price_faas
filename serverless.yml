service: option-price-faas

provider:
  name: aws
  runtime: provided
  stage: prd
  #usagePlan: # Optional usage plan configuration
  #  quota:
  #    limit: 5000
  #    offset: 2
  #    period: MONTH
  #  throttle:
  #    burstLimit: 200
  #    rateLimit: 100
  #UsagePlanKey:
  #    Type: "AWS::ApiGateway::UsagePlanKey"
  #    Properties:
  #      KeyId:
  #        Ref: ApiGatewayApiKey1
  #      KeyType: API_KEY
  #      UsagePlanId:
  #        Ref: UsagePlan
plugins:
  - serverless-domain-manager

custom:
  customDomain:
    domainName: api.finside.org
    basePath: realoptions
    stage: ${self:provider.stage}
    createRoute53Record: true

package:
  individually: true #needed to name each binary "bootstrap"
  exclude:
    - /**
functions:
  calculator:
    handler: target/lambda/pricer/bootstrap
    package:
      include:
        - target/lambda/pricer/bootstrap
    events:
      - http:
          path: v1/{model}/calculator/{optionType}/{sensitivity}
          method: post
          cors: true
          private: true
          request:
            parameters:
              paths:
                optionType: true
                sensitivity: true
                model: true
              querystrings:
                includeImpliedVolatility: false
  density:
    handler: target/lambda/density/bootstrap
    package:
      include:
        - target/lambda/density/bootstrap
    events:
      - http:
          path: v1/{model}/density/density
          method: post
          cors: true
          private: true
          request:
            parameters:
              paths:
                model: true

  riskmetric:
    handler: target/lambda/riskmetric/bootstrap
    package:
      include:
        - target/lambda/riskmetric/bootstrap
    events:
      - http:
          path: v1/{model}/density/riskmetric
          method: post
          cors: true
          private: true
          request:
            parameters:
              paths:
                model: true

  constraints:
    handler: target/lambda/constraints/bootstrap
    package:
      include:
        - target/lambda/constraints/bootstrap
    events:
      - http:
          path: v1/{model}/parameters/parameter_ranges
          method: get
          cors: true
          private: true
          request:
            parameters:
              paths:
                model: true