{"version":3,"sources":["routes/names.js","components/Pricing.js","pages/FrontPage.js","components/Swagger.js","components/AsyncLoad.js","services/aws.js","reducers/catalog.js","services/api-catalog.js","actions/subscriptions.js","actions/constants.js","services/auth.js","services/helpers/promisifyAuth.js","actions/signIn.js","components/Loading.js","components/ApiModal.js","actions/modal.js","pages/Developers.js","pages/SuccessMarketPlaceRegister.js","components/SignIn.js","components/RedirectToHomeIfLoggedIn.js","pages/Register.js","Logo.js","components/AppMenu.js","actions/menu.js","styles/menu.js","pages/Products.js","pages/Subscriptions.js","App.js","registerServiceWorker.js","reducers/auth.js","reducers/errors.js","reducers/loading.js","reducers/modal.js","reducers/index.js","reducers/client.js","reducers/menu.js","index.js"],"names":["HOME","paddingTop","PricingCard","_ref","title","price","quota","children","react_default","a","createElement","reactstrap_es","className","tag","limit","period","toLowerCase","ButtonToDeveloperPortal","Link","to","color","ButtonToRegister","ButtonToMarketPlace","outline","connect","_ref3","isSignedIn","auth","_ref3$catalog","catalog","paid","free","_ref2","style","xs","md","Pricing_PricingCard","Pricing_ButtonToDeveloperPortal","Pricing_ButtonToRegister","isSubscribed","Pricing_ButtonToMarketPlace","heightStyle","minHeight","FrontPage","key","fluid","components_Pricing","SwaggerTest","SwaggerUI","dom_id","url","concat","process","REACT_APP_TAG","id","Component","AsyncLoad","state","isLoading","_this2","this","setLoadingOff","setState","props","requiredObject","onLoad","catch","err","then","_this$props","loading","render","PureComponent","AWS","config","region","defaultState","keys","Object","updateCatalog","usagePlanId","obj","reduce","aggr","objectSpread","defineProperty","convertJson","res","json","getCatalog","fetch","items","curr","name","find","string","includes","registerFree","client","invokeApi","removeSubscription","getUsage","queryParams","date","Date","start","getFullYear","getMonth","toJSON","split","end","getCurrentMonth","addSubscriptionLocal","dispatch","type","value","deleteSubscriptionLocal","removePaidSubscription","paidUsagePlanId","freeUsagePlanId","Promise","all","data","console","log","unregisterPaid","POOL_DATA","UserPoolId","ClientId","COGNITO_LOGIN_KEY","updateCredentials","jwtToken","cognitoUser","credConfig","Logins","credentials","CognitoIdentityCredentials","IdentityPoolId","resolve","reject","refresh","_AWS$config$credentia","accessKeyId","sessionToken","secretAccessKey","apigClient","apigClientFactory","newClient","accessKey","secretKey","invokeUrl","signIn","user","updateSignIn","login","email","password","authenticationData","Username","Password","authDetails","AuthenticationDetails","userData","Pool","CognitoUserPool","CognitoUser","authenticateUser","onSuccess","result","onFailure","getIdToken","getJwtToken","rethrowNoLoginError","code","conditionalRegistration","_ref4","token","isFromMarketPlace","getSubscriptions","isSubscribedPaid","isSubscribedFree","filterSubscriptions","_ref5","marketPlaceSubscribe","registerPaid","register","_ref6","userPool","signUp","init","_ref7","getCurrentUser","getSession","session","Loading","animated","isOpen","modal","_ref$auth","apiKey","toggleOpen","_ref8","updateApiKey","apiError","showApiKey","onClick","toggle","components_AsyncLoad","float","Developers","components_ApiModal","Swagger_SwaggerTest","padding","SuccessMarketPlaceRegister","isLoggingIn","_ref2$auth","error","errors","loginError","fn","e","preventDefault","_e$target","slicedToArray","target","noLoginError","updateLoggingIn","history","onSubmit","navigate","length","goBack","push","goToPreviousPageOrHome","message","for","Redirect","Register","components_RedirectToHomeIfLoggedIn","lg","components_SignIn","Logo","_ref$height","height","_ref$width","width","_ref$className","xmlns","viewBox","d","clipPath","fillRule","LogOut","logout","href","_ref3$auth","menu","signOut","updateLogOut","getPossibleSubscriptions","toggleNavBar","match","light","expand","navbar","undefined","AppMenu_LogOut","paddingBottom","documentationUrl","Products","sm","rel","SubscriptionCard","renderUsage","subscriptionObject","onUnsubscribe","isUnRegistering","startDate","arr","convertUsage","_ref5$catalog","subscriptionError","getSubscriptionUsage","Subscriptions_SubscriptionCard","withRouter","checkIfRegisteringFromMarketplace","Route","path","component","AppMenu","Switch","checkIfRegisteredPaid","es_Redirect","from","exact","Subscriptions","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","defaultQuery","genericError","goodType","badType","arguments","action","combineReducers","genericLoading","_queryString$parse","queryString","parse","search","getDefaultState","newObj","mergeKeys","_action$value","rest","objectWithoutProperties","store","createStore","awsApp","ReactDOM","es","BrowserRouter","basename","src_App_0","document","getElementById","URL","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6cab8797.chunk.js","sourcesContent":["export const HOME='/home'\nexport const PRODUCTS='/products'\nexport const DEVELOPERS='/developers'\nexport const REGISTER='/register'\nexport const LOGIN='/login'\nexport const MARKETPLACE='/tmpmarketplace'\nexport const SUCCESS_MARKETPLACE='/marketplace_success'\nexport const SUBSCRIPTIONS='/subscriptions'","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    Row, Col, Card, CardBody,\n    CardHeader, CardTitle, \n    Button\n} from 'reactstrap'\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {REGISTER, DEVELOPERS, MARKETPLACE} from '../routes/names'\n\nconst paddingTop={paddingTop:20}\nconst PricingCard=({\n    title, price, quota, children\n})=>(\n<Card className='text-center'>\n    <CardHeader>\n        <h4>{title}</h4>\n    </CardHeader>\n    <CardBody>\n        <CardTitle tag='h1'>\n            ${price} <small className=\"text-muted\">/ API call</small>\n        </CardTitle>\n        <p>{quota.limit} API calls per {quota.period.toLowerCase()}</p>\n        {children}\n    </CardBody>\n</Card>\n)\nPricingCard.propTypes={\n    title:PropTypes.string.isRequired,\n    price:PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    quota:PropTypes.shape({\n        limit:PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        period:PropTypes.string.isRequired\n    }).isRequired,\n    children:PropTypes.node\n}\n\nconst ButtonToDeveloperPortal=()=><Link to={DEVELOPERS}><Button color='primary'>Sandbox</Button></Link>\n\nconst ButtonToRegister=()=><Link to={REGISTER}><Button color='primary'>Register Now!</Button></Link>\n\nconst ButtonToMarketPlace=()=><Link to={MARKETPLACE}><Button color='primary' outline>Get Started!</Button></Link>\n \nexport const Pricing=({style, paid, free, isSignedIn})=>(\n    <Row style={style} className='dark-text'>\n        <Col xs={12} md={6} style={paddingTop}>\n            <PricingCard\n                title='Free Tier'\n                price='0'\n                quota={free.quota}\n            >\n                <p>No credit card required</p>\n                {isSignedIn?<ButtonToDeveloperPortal/>:<ButtonToRegister/>}\n            </PricingCard>\n        </Col>\n        <Col xs={12} md={6} style={paddingTop}>\n            <PricingCard\n                title='Paid Tier'\n                price='1'\n                quota={paid.quota}\n            >\n                <p>Email support</p>\n                {paid.isSubscribed?<ButtonToDeveloperPortal/>:<ButtonToMarketPlace/>}\n            </PricingCard>\n        </Col>\n    </Row>\n)\nPricing.propTypes={\n    style:PropTypes.object,\n    paid:PropTypes.shape({\n        quota:PropTypes.shape({\n            limit:PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            period:PropTypes.string.isRequired\n        }).isRequired,\n        isSubscribed:PropTypes.bool\n    }).isRequired,\n    free:PropTypes.shape({\n        quota:PropTypes.shape({\n            limit:PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            period:PropTypes.string.isRequired\n        }).isRequired\n    }).isRequired,\n    isSignedIn:PropTypes.bool\n}\n\n\nconst mapStateToProps=({auth:{isSignedIn}, catalog:{paid, free}})=>({\n    isSignedIn,\n    paid,\n    free\n})\n\nexport default connect(\n    mapStateToProps\n)(Pricing)","import React from 'react'\nimport { Jumbotron, Container } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport {PRODUCTS} from '../routes/names'\nimport Pricing from '../components/Pricing'\nconst heightStyle = { minHeight: '100vh' }\nconst paddingTop={paddingTop:20}\nexport default ()=>[\n    <Jumbotron \n        style={heightStyle} \n        key='summary' \n        fluid \n        className='bg-dark light-text no-margin'\n    >\n        <Container >\n            <h1 className=\"display-3\">\n                Derivatives Modeling as a Service\n            </h1>\n            <p className=\"lead\">\n                For decades, the same financial models have been programmed\n                and re-programmed at every bank. We are changing that.\n                Combining state-of-the-art modeling with modern REST APIs, our\n                models as a service provides robust, scalable infrastructure\n                at a bargain price.\n            </p>\n        </Container>\n    </Jumbotron>,\n    <Jumbotron \n        style={heightStyle} \n        key='description' \n        fluid className='no-margin'\n    >\n        <Container>\n            <h1 className=\"display-3\">Option Pricing Models</h1>\n            <p className=\"lead\">\n                Our models are the most sophisticated in the industry. Our\n                software engineering is top notch.  \n            </p>\n            <ul className=\"lead\">\n                <li>Robust Black-Scholes implied volatility</li>\n                <li>\n                    Option Pricing under extended Merton, Heston, and CGMY\n                </li>\n                <li>Greeks</li>\n                <li>Value at Risk and Expected Shortfall</li>\n            </ul>\n            <p className=\"lead\">\n            For more information on the models see the <Link to={PRODUCTS}>products page</Link>.\n            </p>\n        </Container>\n    </Jumbotron>,\n    <Jumbotron \n        style={heightStyle} key='pricing' \n        fluid \n        className='bg-dark light-text no-margin'\n    >\n        <Container >\n            <h1 className=\"display-3\">Pricing</h1>\n            <Pricing style={paddingTop}/>\n        </Container>\n    </Jumbotron>\n]","import React, { Component } from 'react'\nimport '../styles/swaggerOverrides.css'\nimport 'swagger-ui/dist/swagger-ui.css'\n\nimport SwaggerUI from 'swagger-ui'\nexport default class SwaggerTest extends Component {\n  componentDidMount() {\n    SwaggerUI({\n      dom_id: '#swaggerContainer',\n      url: `https://cdn.rawgit.com/phillyfan1138/option_price_faas/${\n        process.env.REACT_APP_TAG||\"v26\"\n      }/docs/openapi_merged.yml`\n      //presets: [presets.apis],\n    })\n  }\n  render() {\n    return <div id=\"swaggerContainer\" />\n  }\n}\n","import {PureComponent} from 'react'\nimport PropTypes from 'prop-types'\nclass AsyncLoad extends PureComponent {\n    state={isLoading:true}\n    componentDidMount() {\n        const setLoadingOff=()=>this.setState({\n            isLoading:false\n        })\n        if(!this.props.requiredObject){\n            this.props.onLoad(this.props).catch(err=>err).then(setLoadingOff)\n        }\n        else{\n            setLoadingOff()\n        }\n    }\n    render() {\n        const {isLoading}=this.state\n        const {loading, render}=this.props\n        return isLoading?\n            loading?loading():null:\n            render?render(this.props):null\n    }\n}\nAsyncLoad.propTypes={\n    requiredObject:PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.bool]),\n    onLoad:PropTypes.func.isRequired,\n    render:PropTypes.func,\n    loading:PropTypes.func\n}\nexport default AsyncLoad","import AWS from 'aws-sdk'\nexport const awsRegion = process.env.REACT_APP_AWSRegion\nexport const cognitoRegion = process.env.REACT_APP_AWSRegion\nexport const cognitoUserPoolId = process.env.REACT_APP_CognitoUserPoolId\nexport const cognitoIdentityPoolId = process.env.REACT_APP_CognitoIdentityPoolId\nexport const cognitoClientId = process.env.REACT_APP_CognitoUserPoolClientId\nexport const url=process.env.REACT_APP_ApiUrl\nAWS.config.region = cognitoRegion","import {\n    UPDATE_CATALOG, UPDATE_USAGE,\n    DELETE_SUBSCRIPTION,\n    ADD_SUBSCRIPTION\n} from '../actions/constants'\n\nconst defaultState={\n    free:{quota:{period:'month'}},\n    paid:{quota:{period:'month'}}\n}\nexport const keys=Object.keys(defaultState)\nconst updateCatalog=(usagePlanId, obj, state)=>keys.reduce((aggr, key)=>state[key].id===usagePlanId?{...aggr, [key]:{...aggr[key], ...obj}}:aggr, state)\n\nconst mergeKeys=(newObj, state)=>keys.reduce((aggr, curr)=>({\n    ...aggr, \n    [curr]:newObj[curr]||state[curr]\n}), {})\nexport default (state=defaultState, action)=>{\n    switch(action.type){\n        case UPDATE_CATALOG:\n            return mergeKeys(action.value, state)\n        case UPDATE_USAGE:\n            const {usagePlanId, ...rest}=action.value\n            return updateCatalog(usagePlanId, rest, state)\n        case ADD_SUBSCRIPTION:\n            return updateCatalog(action.value, {isSubscribed:true}, state)\n        case DELETE_SUBSCRIPTION:\n            return updateCatalog(action.value, {isSubscribed:false}, state)\n        default:\n            return state\n    }\n}","import {url} from './aws'\nimport {keys} from '../reducers/catalog'\nconst containsString=(match, string)=>match.toLowerCase().includes(string)\nconst checkKey=name=>keys.find(key=>containsString(name, key))\nconst convertJson=res=>res.json()\nexport const getCatalog=()=>fetch(`${url}/catalog`)\n.then(convertJson)\n.then(({items})=>items.reduce((aggr, curr)=>{\n        const key=checkKey(curr.name)\n        if(key){\n            return {...aggr, [key]:curr}\n        }\n        else {\n            return aggr\n        }\n    }, {})\n)\n\nexport const registerFree=(usagePlanId, client)=>client.invokeApi(\n    {},\n    `/subscriptions/${usagePlanId}`,\n    'PUT',\n    {}, {}\n)\n\nconst marketPlaceSubscribe=(\n    usagePlanId, token, client\n)=>client.invokeApi(\n    {},\n    `/marketplace-subscriptions/${usagePlanId}`, \n    'PUT',\n    {}, {token}\n)\n\nexport const registerPaid=(paidUsagePlanId, freeUsagePlanId, token, client)=>Promise.all([\n        removeSubscription(freeUsagePlanId, client),\n        marketPlaceSubscribe(paidUsagePlanId, token, client)\n    ]).then(data=>console.log(data))\n\nexport const unregisterPaid=(paidUsagePlanId, freeUsagePlanId, client)=>Promise.all([\n        removeSubscription(paidUsagePlanId, client),\n        registerFree(freeUsagePlanId, client)\n    ]).then(data=>console.log(data))\n\n\nexport const removeSubscription=(\n    usagePlanId, client\n)=>client.invokeApi(\n    {},\n    `/subscriptions/${usagePlanId}`, \n    'DELETE',\n    {}, {}\n)\nconst getCurrentMonth=()=>{\n    const date = new Date()\n    const start = new Date(date.getFullYear(), date.getMonth(), 1).toJSON().split('T')[0]\n    const end = new Date().toJSON().split('T')[0]\n    return {start, end}\n}\n\nexport const getUsage=(\n    usagePlanId, client\n)=>client.invokeApi(\n    {},\n    `/subscriptions/${usagePlanId}/usage`,\n    'GET', \n    {queryParams:getCurrentMonth()}, {}\n)\n\n\nexport const getSubscriptions=client=>client.invokeApi(\n    {},\n    '/subscriptions', \n    'GET',\n    {}, {}\n)","import {\n    ADD_SUBSCRIPTION, \n    DELETE_SUBSCRIPTION, \n    IS_UNREGISTERING,\n    UPDATE_CATALOG, \n    NO_SUBSCRIPTION_ERROR,\n    SUBSCRIPTION_ERROR,\n    UPDATE_USAGE\n} from './constants'\nimport {unregisterPaid, getUsage, getCatalog} from '../services/api-catalog'\n\nexport const addSubscriptionLocal=dispatch=>usagePlanId=>dispatch({\n    type:ADD_SUBSCRIPTION,\n    value:usagePlanId\n})\n\nexport const deleteSubscriptionLocal=dispatch=>usagePlanId=>dispatch({\n    type:DELETE_SUBSCRIPTION,\n    value:usagePlanId\n})\n\nexport const removePaidSubscription=dispatch=>(paidUsagePlanId, freeUsagePlanId, client)=>{\n    dispatch({\n        type:IS_UNREGISTERING,\n        value:true\n    })\n    unregisterPaid(paidUsagePlanId, freeUsagePlanId, client)\n    .then(()=>{\n        addSubscriptionLocal(dispatch)(freeUsagePlanId)\n        deleteSubscriptionLocal(dispatch)(paidUsagePlanId)\n        dispatch({type:NO_SUBSCRIPTION_ERROR})\n    })\n    .catch(err=>dispatch({type:SUBSCRIPTION_ERROR, err}))\n    .then(()=>dispatch({\n            type:IS_UNREGISTERING,\n            value:false\n        })\n    )\n}\n\nexport const getSubscriptionUsage=dispatch=>(usagePlanId, client)=>getUsage(\n    usagePlanId, \n    client\n)\n.then(({data})=>dispatch({type:UPDATE_USAGE, value:data}))\n.then(()=>dispatch({type:NO_SUBSCRIPTION_ERROR}))\n.catch(err=>dispatch({type:SUBSCRIPTION_ERROR, err}))\n\nexport const getPossibleSubscriptions=dispatch=>getCatalog()\n.then(value=>dispatch({type:UPDATE_CATALOG, value}))\n","export const UPDATE_CATALOG='UPDATE_CATALOG'\nexport const DELETE_SUBSCRIPTION='DELETE_SUBSCRIPTION'\nexport const SUBSCRIPTION_ERROR='SUBSCRIPTION_ERROR'\nexport const CONFIRM_SUBSCRIPTION='CONFIRM_SUBSCRIPTION'\nexport const LOGIN_ERROR='LOGIN_ERROR'\nexport const UPDATE_USAGE='UPDATE_USAGE'\nexport const LOGOUT='LOGOUT'\nexport const UPDATE_API_KEY='UPDATE_API_KEY'\nexport const API_ERROR='API_ERROR'\nexport const CATALOG_ERROR='CATALOG_ERROR'\nexport const UPDATE_AWS_CLIENT='UPDATE_AWS_CLIENT'\nexport const IS_LOGGING_IN='IS_LOGGING_IN'\nexport const TOGGLE_OPEN='TOGGLE_OPEN'\nexport const TOGGLE_MENU_NAV='TOGGLE_MENU_NAV'\nexport const ADD_SUBSCRIPTION='ADD_SUBSCRIPTION'\nexport const IS_UNREGISTERING='IS_UNREGISTERING'\nexport const NO_SUBSCRIPTION_ERROR='NO_SUBSCRIPTION_ERROR'\nexport const NO_LOGIN_ERROR='NO_LOGIN_ERROR'\nexport const NO_API_ERROR='NO_API_ERROR'","import AWS from 'aws-sdk'\nimport {url, awsRegion} from './aws'\nimport { \n    CognitoUserPool, \n    CognitoUser, \n    AuthenticationDetails \n} from 'amazon-cognito-identity-js'\nimport { \n    cognitoIdentityPoolId, \n    cognitoUserPoolId, \n    cognitoClientId, \n    cognitoRegion \n} from './aws'\nimport apigClientFactory from 'aws-api-gateway-client'\nimport {\n    signUp, \n    credentialRefresh,\n    authenticateUser,\n    getSession\n} from './helpers/promisifyAuth'\n\nimport {\n    updateSignIn,\n    updateLogOut,\n    updateApiKey,\n    apiError\n} from '../actions/signIn'\nimport { registerFree, registerPaid, getSubscriptions } from './api-catalog'\nimport { deleteSubscriptionLocal, addSubscriptionLocal } from '../actions/subscriptions'\n\nconst POOL_DATA = {\n  UserPoolId: cognitoUserPoolId,\n  ClientId: cognitoClientId\n}\n\nconst COGNITO_LOGIN_KEY=`cognito-idp.${cognitoRegion}.amazonaws.com/${cognitoUserPoolId}`\n\nconst updateCredentials=(jwtToken, cognitoUser, dispatch)=>{\n    const Logins={\n        [COGNITO_LOGIN_KEY]:jwtToken\n    }\n    AWS.config.credentials = new AWS.CognitoIdentityCredentials({\n        IdentityPoolId: cognitoIdentityPoolId,\n        Logins\n    })\n    return credentialRefresh(AWS.config.credentials)\n        .then(()=>{\n            const {\n                accessKeyId,\n                sessionToken,\n                secretAccessKey\n            }=AWS.config.credentials\n            const apigClient=apigClientFactory.newClient({\n                accessKey:accessKeyId,\n                secretKey:secretAccessKey,\n                sessionToken,\n                region:awsRegion, \n                invokeUrl:url\n            })\n            return signIn(apigClient)\n                .then(()=>{\n                    updateSignIn(dispatch, apigClient, cognitoUser)\n                    return apigClient\n                })\n        })\n}\n\nconst login=(email, password, dispatch)=>{\n    const authenticationData = {\n        Username: email,\n        Password: password\n    }\n    const authDetails = new AuthenticationDetails(authenticationData)\n    const userPool=new CognitoUserPool(POOL_DATA)\n    const userData = {\n        Username: email,\n        Pool: userPool\n    }\n    const cognitoUser = new CognitoUser(userData)\n    return authenticateUser(cognitoUser, authDetails)\n        .then(result=>{\n            const jwtToken=result\n                .getIdToken()\n                .getJwtToken()\n            return updateCredentials(jwtToken, cognitoUser, dispatch)\n        })\n}\n\nconst rethrowNoLoginError=err=>{\n    if(err.code!==\"UsernameExistsException\"){\n        throw(err)\n    }\n}\nconst filterSubscriptions=({paidUsagePlanId, freeUsagePlanId})=>({data})=>data.reduce((aggr, {id})=>{\n    switch(id){\n        case paidUsagePlanId:{\n            return {...aggr, isSubscribedPaid:true}\n        }\n        case freeUsagePlanId:{\n            return {...aggr, isSubscribedFree:true}\n        }\n        default:{\n            return aggr\n        }       \n    }\n}, {isSubscribedPaid:false, isSubscribedFree:false})\nconst conditionalRegistration=({\n    paidUsagePlanId, freeUsagePlanId, \n    token, isFromMarketPlace\n}, dispatch)=>client=>{\n    if(!client){\n        return Promise.resolve()\n    }\n    return getSubscriptions(client)\n        .then(filterSubscriptions({\n            paidUsagePlanId, freeUsagePlanId\n        }))\n        .then(({isSubscribedFree, isSubscribedPaid})=>{\n            if(isSubscribedFree){\n                addSubscriptionLocal(dispatch)(freeUsagePlanId)\n            }\n            if(isSubscribedPaid){\n                addSubscriptionLocal(dispatch)(paidUsagePlanId)\n            }\n            if(isFromMarketPlace&!isSubscribedPaid){\n                addSubscriptionLocal(dispatch)(paidUsagePlanId)\n                deleteSubscriptionLocal(dispatch)(freeUsagePlanId)\n                return registerPaid(\n                    paidUsagePlanId, freeUsagePlanId, token, client\n                )\n            }\n            else if(!isSubscribedFree) {\n                addSubscriptionLocal(dispatch)(freeUsagePlanId)\n                return registerFree(freeUsagePlanId, client)\n            }\n            else {\n                return Promise.resolve()\n            }\n        })\n}\n\n/**Always \"register\" instead of logging in.  Login will just fail on already registered and then login */\nexport const register=dispatch=>({\n    paidUsagePlanId, freeUsagePlanId, \n    token, isFromMarketPlace\n})=>{\n    const userPool=new CognitoUserPool(POOL_DATA)\n    return (email, password)=>{\n        return signUp(userPool, email, password)\n            .catch(rethrowNoLoginError)\n            .then(()=>login(email, password, dispatch))\n            .then(conditionalRegistration({\n                paidUsagePlanId, freeUsagePlanId, \n                token, isFromMarketPlace\n            }, dispatch))\n    }\n}\nexport const init=dispatch=>({\n    paidUsagePlanId, freeUsagePlanId, \n    token, isFromMarketPlace\n})=>{\n    const userPool = new CognitoUserPool(POOL_DATA)\n    const cognitoUser = userPool.getCurrentUser()\n    return (cognitoUser?getSession(cognitoUser).then(session=>{\n        const token=session.getIdToken().getJwtToken()\n        return updateCredentials(token, cognitoUser, dispatch)\n    }):Promise.resolve())\n    .then(conditionalRegistration({\n        paidUsagePlanId, freeUsagePlanId, \n        token, isFromMarketPlace\n    }, dispatch))\n}\n\n\n\n\nexport const logout=dispatch=>cognitoUser=>{\n    cognitoUser.signOut()\n    updateLogOut(dispatch)\n}\n\nexport const showApiKey=dispatch=>client=>client.invokeApi(\n    {},\n    '/apikey', \n    'GET',\n    {}, {}\n)\n.then(({data:{value}}) => updateApiKey(dispatch, value))\n.catch(apiError(dispatch))\n\nconst signIn=client=>client.invokeApi(\n    {},\n    '/signin',\n    'POST', \n    {},\n    {}\n)","export const signUp=(userPool, email, password)=>new Promise((resolve, reject)=>userPool.signUp(\n    email, password, \n    [], null, \n    (err, result)=>{\n        if(err){\n            return reject(err)\n        }\n        return resolve(result)\n    }\n))\n\nexport const credentialRefresh=credConfig=>new Promise((resolve, reject)=>credConfig.refresh(err=>{\n        if(err){\n            return reject(err)\n        }\n        return resolve()\n    }\n))\n\nexport const authenticateUser=(cognitoUser, authDetails)=>new Promise((resolve, reject)=>cognitoUser.authenticateUser(authDetails, {\n    onSuccess: result => {\n        resolve(result)\n    },\n    onFailure: err => {\n        reject(err)\n    }\n}))\n\nexport const getSession=cognitoUser=>new Promise((resolve, reject)=>cognitoUser.getSession((err, session)=>{\n    if(err){\n        return reject(err)\n    }\n    return resolve(session)\n}))","import {\n    UPDATE_AWS_CLIENT,\n    LOGOUT,\n    IS_LOGGING_IN,\n    LOGIN_ERROR,\n    UPDATE_API_KEY,\n    API_ERROR,\n    NO_LOGIN_ERROR\n} from './constants'\n\nexport const updateSignIn=(dispatch, client, user)=>dispatch({\n    type:UPDATE_AWS_CLIENT,\n    client, user\n})\n\nexport const updateLogOut=dispatch=>dispatch({type:LOGOUT})\n\nexport const loginError=dispatch=>err=>dispatch({\n    type:LOGIN_ERROR,\n    value:err\n})\nexport const noLoginError=dispatch=>()=>dispatch({\n    type:NO_LOGIN_ERROR\n})\n\nexport const updateLoggingIn=(dispatch, value)=>dispatch({\n    type:IS_LOGGING_IN,\n    value\n})\n\nexport const updateApiKey=(dispatch, value)=>dispatch({type:UPDATE_API_KEY, value})\nexport const apiError=dispatch=>err=>dispatch({type:API_ERROR, value:err})","import React from 'react'\nimport {  Progress } from 'reactstrap'\nexport default ()=><Progress  animated value={100}/>","import React from 'react'\nimport {Button, Modal, ModalHeader, ModalBody} from 'reactstrap'\nimport { connect } from 'react-redux'\nimport {\n    toggleOpen\n} from '../actions/modal'\nimport AsyncLoad from './AsyncLoad'\nimport {showApiKey} from '../services/auth'\nimport Loading from './Loading'\nimport PropTypes from 'prop-types'\nconst mapStateToProps=({modal:{isOpen}, auth:{apiKey, isSignedIn}, client})=>({\n    isOpen, apiKey, client, isSignedIn\n})\nconst mapDispatchToProps=dispatch=>({\n    toggleOpen:toggleOpen(dispatch),\n    onLoad:showApiKey(dispatch)\n})\nexport const ApiModal=({\n    style,\n    isOpen, toggleOpen, apiKey, \n    client, onLoad, isSignedIn\n})=>[\n    isSignedIn?<Button \n        onClick={toggleOpen} \n        key='button'\n        style={style}\n    >\n        View API Key\n    </Button>:null,\n    <Modal \n        key='modal' isOpen={isOpen} \n        toggle={toggleOpen} \n    >\n        <ModalHeader>API Key</ModalHeader>\n        <AsyncLoad requiredObject={apiKey} onLoad={()=>onLoad(client)} loading={Loading} render={()=>(\n            <ModalBody>{apiKey}</ModalBody>\n        )}/>\n    </Modal>\n]\nApiModal.propTypes={\n    style:PropTypes.object,\n    isOpen:PropTypes.bool.isRequired,\n    toggleOpen:PropTypes.func.isRequired,\n    apiKey:PropTypes.string,\n    client:PropTypes.object,\n    onLoad:PropTypes.func.isRequired,\n    isSignedIn:PropTypes.bool\n}\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ApiModal)\n","import {\n    TOGGLE_OPEN\n} from './constants'\n\nexport const toggleOpen=dispatch=>()=>dispatch({\n    type:TOGGLE_OPEN\n})","import React from 'react'\nimport {\n     Row, Col, Container\n} from 'reactstrap'\nimport Swagger from '../components/Swagger'\nimport ApiModal from '../components/ApiModal'\n\nconst paddingTop={paddingTop:20}\nconst style={float:'left'}\nexport default ()=>[\n    <Container key='container'>           \n        <Row>\n            <Col style={paddingTop}>\n                <ApiModal style={style}/>\n            </Col>\n        </Row>\n    </Container>,\n    <Swagger key='swagger'/>\n]\n","import React from 'react'\nimport {Row, Col, Container} from 'reactstrap'\nimport {Link} from 'react-router-dom'\nimport {\n    DEVELOPERS, SUBSCRIPTIONS\n} from '../routes/names'\nconst padding={paddingTop:20}\nexport default ()=>(\n    <Container>\n        <Row >\n            <Col xs={12} style={padding}>\n                <h3>Successfully logged in to marketplace!</h3>\n                <p>Got to the <Link to={DEVELOPERS}>developer portal</Link> to test the connections or manage <Link to={SUBSCRIPTIONS}>subscriptions</Link>.</p>\n            </Col>\n        </Row>\n    </Container>\n)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    Button, Form, FormGroup,\n    Label, Input, Alert\n} from 'reactstrap'\nimport { connect } from 'react-redux'\nimport { register } from '../services/auth'\nimport {loginError, updateLoggingIn, noLoginError} from '../actions/signIn'\nimport Loading from '../components/Loading'\nimport {HOME} from '../routes/names'\n\nconst goToPreviousPageOrHome=(fn, history, loginError, noLoginError, updateLoggingIn)=>{\n    const navigate=history.length>0?history.goBack:()=>history.push(HOME)\n    return e=>{\n        updateLoggingIn(true)\n        fn(e).then(navigate).then(noLoginError).catch(loginError).then(()=>updateLoggingIn(false))\n    }\n}\n\nexport const SignIn=({\n    register, isLoggingIn, \n    history, loginError, \n    noLoginError,\n    error, updateLoggingIn, \n    token, paidUsagePlanId, \n    freeUsagePlanId, isFromMarketPlace\n})=>(\n    <Form \n        onSubmit={goToPreviousPageOrHome(\n            register({\n                paidUsagePlanId, freeUsagePlanId, \n                token, isFromMarketPlace\n            }), history, \n            loginError, noLoginError, updateLoggingIn\n        )}\n    >\n        {error&&<Alert color='danger'>{error.message}</Alert>}\n        <FormGroup>\n            <Label for='emailId'>Email</Label>\n            <Input type='email' name='email' id='emailId'/>\n        </FormGroup>\n        <FormGroup>\n            <Label for='passwordId'>Password</Label>\n            <Input type='password' name='password' id='passwordId'/>\n        </FormGroup>\n        {isLoggingIn?\n            <Loading/>:\n            <Button \n                color='primary'\n                className=\"login-form-button\"\n            >\n                Register/Log In\n            </Button>\n        }\n    </Form>\n)\nSignIn.propTypes={\n    register:PropTypes.func.isRequired,\n    isLoggingIn:PropTypes.bool.isRequired,\n    history:PropTypes.shape({\n        goBack:PropTypes.func.isRequired,\n        push:PropTypes.func.isRequired,\n        length:PropTypes.number.isRequired\n    }).isRequired,\n    loginError:PropTypes.func.isRequired,\n    error:PropTypes.shape({\n        message:PropTypes.string.isRequired,\n    }),\n    updateLoggingIn:PropTypes.func.isRequired,\n    token:PropTypes.string,\n    paidUsagePlanId:PropTypes.string,\n    freeUsagePlanId:PropTypes.string,\n    isFromMarketPlace:PropTypes.bool.isRequired\n}\nconst getForm=fn=>aggr=>e=>{\n    e.preventDefault()\n    const [{value:email}, {value:password}]=e.target\n    return fn(aggr)(email, password)\n}\nconst mapDispatchToProps=dispatch=>({\n    register:getForm(register(dispatch)),\n    loginError:loginError(dispatch),\n    noLoginError:noLoginError(dispatch),\n    updateLoggingIn:isLoggingIn=>updateLoggingIn(dispatch, isLoggingIn)\n})\nconst mapStateToProps=({\n    loading:{isLoggingIn}, auth:{token, paidUsagePlanId, isFromMarketPlace},\n    errors:{loginError:error},\n    catalog:{free:{id:freeUsagePlanId}}\n})=>({\n    isLoggingIn, error, \n    token, paidUsagePlanId, \n    freeUsagePlanId, \n    isFromMarketPlace\n})\n\nexport default connect(\n    mapStateToProps, \n    mapDispatchToProps\n)(SignIn)","import React from 'react'\nimport {Redirect} from 'react-router'\nimport {connect} from 'react-redux'\nimport {HOME} from '../routes/names'\nimport PropTypes from 'prop-types'\nexport const RedirectToHomeIfLoggedIn= ({isSignedIn, children})=>isSignedIn?\n    <Redirect to={HOME}/>:\n    children\n\nRedirectToHomeIfLoggedIn.propTypes={\n    isSignedIn:PropTypes.bool,\n    children:PropTypes.node.isRequired\n}\n\nconst mapStateToProps=({auth:{isSignedIn}})=>({isSignedIn})\nexport default connect(\n    mapStateToProps\n)(RedirectToHomeIfLoggedIn)","import React from 'react'\nimport {Row, Col, Container} from 'reactstrap'\nimport SignIn from '../components/SignIn'\nimport RedirectToHomeIfLoggedIn from '../components/RedirectToHomeIfLoggedIn'\n\nconst padding={paddingTop:20}\n\nexport default ({history})=>(\n    <RedirectToHomeIfLoggedIn>\n        <Container>\n            <Row >\n                <Col xs={12} md={6} lg={4} style={padding}>\n                    <SignIn history={history}/>\n                </Col>\n            </Row>\n        </Container>\n    </RedirectToHomeIfLoggedIn>\n)","import React from 'react'\nexport default ({height='1em', width='1em', className='logo-primary'})=>(\n    <svg \n        xmlns=\"http://www.w3.org/2000/svg\" \n        width={width} height={height}\n        viewBox=\"0 0 500 500\"\n    >\n        <defs>\n            <clipPath id=\"a\">\n                <path d=\"M0 0h500v500H0z\"/>\n            </clipPath>\n        </defs>\n        <g \n            clipPath=\"url(#a)\" \n            className={className}\n        >\n            <path \n                d=\"M132.197 163.794l58.967-15.29 78.648 303.313-58.966 15.29z\"\n            />\n            <path \n                d=\"M132.232 151.306c0-59.33 48.169-107.5 107.5-107.5s107.5 48.17 107.5 107.5c0 59.331-48.169 107.5-107.5 107.5s-107.5-48.169-107.5-107.5zm61.906-3.797c0-24.56 19.94-44.5 44.5-44.5s44.5 19.94 44.5 44.5-19.94 44.5-44.5 44.5-44.5-19.94-44.5-44.5z\" fillRule=\"evenodd\"\n            />\n            <path \n                d=\"M147.44 317h184.707v40.447H147.44z\"\n            />\n        </g>\n    </svg>\n\n)","import React from 'react'\nimport { NavLink as Link } from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink\n} from 'reactstrap'\nimport Logo from '../Logo.js'\nimport {\n    HOME, DEVELOPERS, PRODUCTS, \n    REGISTER, LOGIN, MARKETPLACE, SUBSCRIPTIONS\n} from '../routes/names'\nimport {logout} from '../services/auth'\nimport {menuBarHeight} from '../styles/menu'\nimport Loading from './Loading'\nimport AsyncLoad from './AsyncLoad'\nimport {init} from '../services/auth'\nimport {toggleNavBar} from '../actions/menu'\nimport { getPossibleSubscriptions } from '../actions/subscriptions.js'\n\nexport const LogOut=({logout, cognitoUser})=><NavLink href=\"#\" onClick={()=>logout(cognitoUser)}>Log Out</NavLink>\n\n//the \"purchase\" link will go to amazon web store\nexport const AppMenu=({\n    toggleNavBar, isSignedIn, \n    isOpen, logout, init, \n    cognitoUser,\n    paidUsagePlanId, \n    freeUsagePlanId,\n    token, isFromMarketPlace, match\n})=>(\n<Navbar\n    color=\"light\" light expand=\"md\"\n>\n    <NavbarBrand><Logo height={menuBarHeight} width={menuBarHeight} className='logo-primary'/></NavbarBrand>\n    <NavbarToggler onClick={toggleNavBar} />\n    <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n                <NavLink to={HOME} tag={Link} >Home</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink to={PRODUCTS} tag={Link}  >Products</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink to={DEVELOPERS} tag={Link} >Developers</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink to={MARKETPLACE} tag={Link} >Purchase</NavLink>\n            </NavItem>\n            {isSignedIn?<NavItem>\n                <NavLink to={SUBSCRIPTIONS} tag={Link} >Subscriptions</NavLink>\n            </NavItem>:null}\n            <NavItem>\n                <AsyncLoad onLoad={()=>init({token, paidUsagePlanId, isFromMarketPlace})} loading={Loading} requiredObject={freeUsagePlanId!==undefined} render={()=>isSignedIn?\n                    <LogOut \n                        logout={logout} \n                        cognitoUser={cognitoUser}\n                    />:\n                    <NavLink to={LOGIN} tag={Link}>Log In</NavLink>\n                }/>\n            </NavItem>\n            {isSignedIn?null:<NavItem>\n                <NavLink to={REGISTER} tag={Link} >Sign Up</NavLink>\n            </NavItem>}\n            \n        </Nav>\n    </Collapse>\n</Navbar>\n)\nAppMenu.propTypes={\n    toggleNavBar:PropTypes.func.isRequired,\n    isSignedIn:PropTypes.bool,\n    isOpen:PropTypes.bool.isRequired,\n    logout:PropTypes.func.isRequired,\n    init:PropTypes.func.isRequired,\n    cognitoUser:PropTypes.shape({\n        authenticateUser:PropTypes.func.isRequired,\n        getSession:PropTypes.func.isRequired,\n        signOut:PropTypes.func.isRequired\n    }),\n    paidUsagePlanId:PropTypes.string,\n    freeUsagePlanId:PropTypes.string,\n    token:PropTypes.string,\n    isFromMarketPlace:PropTypes.bool.isRequired\n}\n\nconst mapStateToProps=({auth:{isSignedIn, cognitoUser, token, paidUsagePlanId, isFromMarketPlace}, menu, catalog:{free:{id:freeUsagePlanId}}})=>({\n    isSignedIn,\n    cognitoUser,\n    isOpen:menu,\n    token,\n    paidUsagePlanId, \n    freeUsagePlanId,\n    isFromMarketPlace\n})\n\nconst mapDispatchToProps=dispatch=>({\n    logout:logout(dispatch),\n    init:({paidUsagePlanId, token, isFromMarketPlace})=>getPossibleSubscriptions(dispatch).then(({value:{free:{id:freeUsagePlanId}}})=>init(dispatch)({token, paidUsagePlanId, isFromMarketPlace, freeUsagePlanId})),\n    toggleNavBar:toggleNavBar(dispatch)\n})\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppMenu)","import {\n    TOGGLE_MENU_NAV\n} from './constants'\n\nexport const toggleNavBar=dispatch=>()=>dispatch({type:TOGGLE_MENU_NAV})","export const menuBarHeight='50px'","import React from 'react'\nimport {\n    Container, Row, Col\n} from 'reactstrap'\nimport {REGISTER} from '../routes/names'\nimport Pricing from '../components/Pricing'\nimport {Link} from 'react-router-dom'\nconst padding={paddingTop:40, paddingBottom:20}\nconst githubUrl='https://github.com/phillyfan1138'\nconst documentationUrl=`${process.env.PUBLIC_URL}/OptionCalculation.pdf`\nexport default ()=>(\n<Container>\n    <Row key='description'>\n        <Col xs={12} sm={9} style={padding}>\n            <h1 className='display-4'>Real Options</h1>\n            <p >Our flagship product!  Computes call and put prices, Black Scholes implied volatilities, value at risk, densities, and expected shortfall for three cutting edge models.</p>\n        </Col>\n    </Row>\n    <Row>\n        <Col xs={12} sm={6}>\n            <h3>Cutting edge models</h3>\n            <p>Heston, Extended Merton Jump-Diffusion, and Extended CGMY!  Each model includes a diffusion component which is correlated with a stochastic clock.  Incorporates skew, excess kurtosis, leverage effect, and stochastic volatility!</p>\n        </Col>\n        <Col xs={12} sm={6}>\n            <h3>Easy to use</h3>\n            <p><Link to={REGISTER}>Register</Link> to obtain an API key and start making API calls!</p>\n        </Col>\n    </Row>\n    <Row>\n        <Col xs={12} sm={6}>\n            <h3>Open and tested</h3>\n            <p>We extensively test our products for accuracy.  <a \n                href={githubUrl}\n                target='_blank'\n                rel=\"noopener noreferrer\"\n            >All our code is open source</a> so you can review the code yourself!</p>\n        </Col>\n        <Col xs={12} sm={6}>\n            <h3>Documented</h3>\n            <p>No option models are complete without documentation!  We provide comprehensive <a \n                href={documentationUrl}\n                target='_blank'\n                rel=\"noopener noreferrer\"\n            >documentation</a> for the model theory and assumptions.</p>\n        </Col>\n    </Row>\n    <Pricing/>\n</Container>\n)","import React from 'react'\nimport {\n    Row, Col, Card, CardBody,\n    CardHeader,  Alert,\n    Button, Container\n} from 'reactstrap'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport {removePaidSubscription, getSubscriptionUsage} from '../actions/subscriptions'\nimport AsyncLoad from '../components/AsyncLoad'\nimport Loading from '../components/Loading'\nconst paddingTop={paddingTop:20}\nexport const SubscriptionCard=({\n    title, children\n})=>(\n<Card className='text-center'>\n    <CardHeader>\n        <h4>{title}</h4>\n    </CardHeader>\n    <CardBody>\n        {children}\n    </CardBody>\n</Card>\n)\n\nexport const getFirstOfNestedOrNonsenseKey=arr=>arr&&arr.length>0?arr[0]:'key'\n\nexport const convertUsage=items=>{\n    const usage=items[getFirstOfNestedOrNonsenseKey(Object.keys(items))]||[[]]\n    return usage.reduce((aggr, [dailyUsage])=>aggr+dailyUsage, 0)||0\n}\n\nexport const renderUsage=(subscriptionObject, isSubscribed, onUnsubscribe, isUnRegistering, error)=>()=>{\n    const {items, quota, startDate}=subscriptionObject\n    return <div>\n        Usage since {startDate}: {convertUsage(items)} out of {quota.limit}.\n        {onUnsubscribe&&isSubscribed?(isUnRegistering?<Loading/>:<Button onClick={onUnsubscribe}>Unsubscribe</Button>):null}\n        {error&&<Alert color='danger'>{error.message}</Alert>}\n    </div>\n}\nexport const Subscriptions=({\n    style, paid, free,  \n    client, isSignedIn, getUsage,\n    isUnRegistering, error,\n    removePaidSubscription\n})=>(\n<Container key='container'>\n    <Row style={style} className='dark-text'>\n        <Col xs={12} md={6} style={paddingTop}>\n            <SubscriptionCard \n                title='Free Tier'\n            >\n                {free.id&&isSignedIn?\n                <AsyncLoad\n                    onLoad={()=>getUsage(free.id, client)}\n                    render={renderUsage(free, free.isSubscribed)}\n                    loading={Loading}\n                />:<Loading/>}\n            </SubscriptionCard>\n        </Col>\n        <Col xs={12} md={6} style={paddingTop}>\n            <SubscriptionCard \n                title='Paid Tier'\n            >\n                {paid.id&&isSignedIn?\n                <AsyncLoad\n                    onLoad={()=>getUsage(paid.id, client)}\n                    render={renderUsage(\n                        paid, paid.isSubscribed,  \n                        ()=>removePaidSubscription(paid.id, free.id, client), isUnRegistering, error\n                    )}\n                    loading={Loading}\n                />:<Loading/>}\n                \n            </SubscriptionCard>\n        </Col>\n    </Row>\n</Container>\n)\n\nSubscriptions.propTypes={\n    style:PropTypes.object,\n    paid:PropTypes.shape({\n        quota:PropTypes.shape({\n            limit:PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            period:PropTypes.string.isRequired\n        }).isRequired,\n        id:PropTypes.string,\n        isSubscribed:PropTypes.bool\n    }).isRequired,\n    free:PropTypes.shape({\n        quota:PropTypes.shape({\n            limit:PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            period:PropTypes.string.isRequired\n        }).isRequired,\n        id:PropTypes.string,\n        isSubscribed:PropTypes.bool\n    }).isRequired,\n    client:PropTypes.object,\n    isSignedIn:PropTypes.bool,\n    getUsage:PropTypes.func.isRequired,\n    isUnRegistering:PropTypes.bool.isRequired,\n    error:PropTypes.shape({\n        message:PropTypes.string.isRequired\n    }),\n    removePaidSubscription:PropTypes.func.isRequired\n}\n\nconst mapStateToProps=({\n    auth:{isSignedIn}, client, \n    catalog:{paid, free},\n    errors:{subscriptionError:error},\n    loading:{isUnRegistering}\n})=>({\n    isSignedIn,\n    error,\n    paid,\n    free,\n    client,\n    isUnRegistering\n})\n\nconst mapDispatchToProps=dispatch=>({\n    getUsage:getSubscriptionUsage(dispatch),\n    removePaidSubscription:removePaidSubscription(dispatch)\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Subscriptions)","import React from 'react'\nimport FrontPage from './pages/FrontPage'\nimport Developers from './pages/Developers'\nimport SuccessMarketPlaceRegister from './pages/SuccessMarketPlaceRegister'\nimport Register from './pages/Register'\nimport AppMenu from './components/AppMenu'\nimport './App.css'\nimport Loading from './components/Loading'\nimport {Route, Redirect, Switch, withRouter } from 'react-router-dom'\nimport Products from './pages/Products'\nimport {\n  HOME, PRODUCTS, \n  DEVELOPERS, LOGIN, REGISTER,\n  SUCCESS_MARKETPLACE, SUBSCRIPTIONS\n} from './routes/names'\nimport Subscriptions from './pages/Subscriptions'\nimport { connect } from 'react-redux'\n\nexport const checkIfRegisteringFromMarketplace=(\n  isFromMarketPlace, \n  isSignedIn, \n  freeUsagePlanId\n)=>isFromMarketPlace&&(isSignedIn===undefined||freeUsagePlanId===undefined)\n\n///TODO!! Consider using isSubscribed instead of isSignedIn\nexport const checkIfRegisteredPaid=(\n  isFromMarketPlace, \n  isSignedIn\n)=>isFromMarketPlace&&isSignedIn\n//note that the route has to include AppMenu even though AppMenu doesn't use \"page\".\n//this is because AppMenu won't update the selected menu unless part of a route\nconst App = ({\n  isFromMarketPlace, isSignedIn, \n  freeUsagePlanId\n}) => checkIfRegisteringFromMarketplace(\n  isFromMarketPlace, isSignedIn, \n  freeUsagePlanId\n)?<Loading/>:\n  <div className='app'>\n    <Route path='/:page' component={AppMenu}/>\n    <Switch>\n      <Route \n        path={SUCCESS_MARKETPLACE}\n        component={SuccessMarketPlaceRegister} \n      />\n      {checkIfRegisteredPaid(\n        isFromMarketPlace,   \n        isSignedIn\n      )?<Redirect to={SUCCESS_MARKETPLACE}/>:null}\n      <Redirect from='/' exact to={HOME} />\n    </Switch>  \n    <Route\n      exact\n      path={HOME}\n      component={FrontPage}\n    />\n    <Route \n      path={PRODUCTS}\n      component={Products} \n    />\n    <Route \n      path={DEVELOPERS}\n      component={Developers} \n    />\n    <Route \n      path={SUBSCRIPTIONS}\n      component={Subscriptions} \n    />\n    \n    <Route \n      path={REGISTER}\n      component={Register} \n    />\n    <Route \n      path={LOGIN}\n      component={Register} \n    />\n  </div>\n\nconst mapStateToProps=({\n  auth:{isSignedIn, isFromMarketPlace},\n  catalog:{free:{id:freeUsagePlanId}}\n})=>({\n  isSignedIn,\n  isFromMarketPlace,\n  freeUsagePlanId\n})\n\nexport default withRouter(connect(mapStateToProps)(App))\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import {\n    LOGOUT,\n    UPDATE_API_KEY,\n    UPDATE_AWS_CLIENT\n} from '../actions/constants'\nimport queryString from 'query-string'\nconst defaultQuery={\n    isSignedIn:false\n}\n\nconst getDefaultState=()=>{\n    const {token, usagePlanId}=queryString.parse(window.location.search)\n    return {\n        ...defaultQuery,\n        token,\n        paidUsagePlanId:usagePlanId,\n        isFromMarketPlace:!!(token&&usagePlanId)\n    }\n}\n\nexport default (state=getDefaultState(), action)=>{\n    switch(action.type){\n        case UPDATE_API_KEY:\n            return {\n                ...state,\n                apiKey:action.value\n            }\n        case UPDATE_AWS_CLIENT:\n            return {\n                ...state, \n                isSignedIn:true, \n                cognitoUser:action.user\n            }\n        case LOGOUT:\n            return defaultQuery\n        default:\n            return state\n    }\n}","import {\n    NO_SUBSCRIPTION_ERROR,\n    SUBSCRIPTION_ERROR,\n    LOGIN_ERROR,\n    NO_LOGIN_ERROR,\n    API_ERROR,\n    NO_API_ERROR\n} from '../actions/constants'\nimport {combineReducers} from 'redux'\nconst genericError=(goodType, badType)=>(state=null, action)=>{\n    switch(action.type){\n        case goodType:\n            return null\n        case badType:\n            return action.value\n        default:\n            return state\n    }\n}\nconst subscriptionError=genericError(NO_SUBSCRIPTION_ERROR, SUBSCRIPTION_ERROR)\nconst loginError=genericError(NO_LOGIN_ERROR, LOGIN_ERROR)\nconst apiError=genericError(NO_API_ERROR, API_ERROR)\nexport default combineReducers({\n    subscriptionError,\n    loginError,\n    apiError\n})\n\n","import {\n    IS_LOGGING_IN, \n    IS_UNREGISTERING\n} from '../actions/constants'\nimport {combineReducers} from 'redux'\n\nconst genericLoading=type=>(state=false, action)=>{\n    switch(action.type){\n        case type:\n            return action.value\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    isLoggingIn:genericLoading(IS_LOGGING_IN),\n    isUnRegistering:genericLoading(IS_UNREGISTERING)\n})","import {\n    TOGGLE_OPEN\n} from '../actions/constants'\n\nimport {combineReducers} from 'redux'\n\nconst isOpen=(state=false, action)=>{\n    switch(action.type){\n        case TOGGLE_OPEN:\n            return !state\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    isOpen\n})","import auth from './auth'\nimport catalog from './catalog'\nimport menu from './menu'\nimport errors from './errors'\nimport client from './client'\nimport loading from './loading'\nimport modal from './modal'\nimport {combineReducers} from 'redux'\nexport default combineReducers({\n    auth,\n    catalog,\n    client,\n    menu,\n    errors,\n    loading,\n    modal\n})\n","import {\n    UPDATE_AWS_CLIENT\n} from '../actions/constants'\n\nexport default (state={}, action)=>{\n    switch(action.type){\n        case UPDATE_AWS_CLIENT:\n            return action.client\n        default:\n            return state\n    }\n}","import {\n    TOGGLE_MENU_NAV\n} from '../actions/constants'\n\nexport default (state=false, action)=>{\n    switch(action.type){\n        case TOGGLE_MENU_NAV:\n            return !state\n        default:\n            return state\n    }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './styles/finside.scss'\nimport registerServiceWorker from './registerServiceWorker'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport awsApp from './reducers'\nimport { BrowserRouter as Router } from 'react-router-dom'\nconst store=createStore(awsApp)\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n            <App/>\n        </Router>\n    </Provider>, \n    document.getElementById('root')\n)\nregisterServiceWorker()\n"],"sourceRoot":""}